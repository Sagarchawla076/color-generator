{"version":3,"sources":["components/SingleColor.js","components/App.js","index.js"],"names":["SingleColor","rgb","weight","hex","index","useState","alert","setAlert","bcg","join","white","hexValue","className","style","backgroundColor","onClick","navigator","clipboard","writeText","setTimeout","App","color","setColor","error","setError","list","setList","useEffect","colors","Values","all","onSubmit","e","preventDefault","type","onChange","target","value","placeholder","map","ReactDOM","render","document","querySelector"],"mappings":"6NA0BeA,EAxBK,SAAC,GAAiC,IAA/BC,EAA8B,EAA9BA,IAAKC,EAAyB,EAAzBA,OAAQC,EAAiB,EAAjBA,IAAKC,EAAY,EAAZA,MACvC,EAA0BC,oBAAS,GAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACMC,EAAMP,EAAIQ,KAAK,KACfC,EAAQN,EAAQ,GAAK,QAAU,GAC/BO,EAAQ,WAAOR,GAQrB,OACE,0BACES,UAAS,gBAAWF,GACpBG,MAAO,CAAEC,gBAAgB,OAAD,OAASN,EAAT,MACxBO,QAAS,kBAVXR,GAAS,GACTS,UAAUC,UAAUC,UAAUP,QAC9BQ,YAAW,WACTZ,GAAS,KACR,MAGH,UAKE,oBAAGK,UAAU,gBAAb,UAA8BV,EAA9B,OACA,mBAAGU,UAAU,cAAb,SAA4BD,IAC3BL,GAAS,mBAAGM,UAAU,QAAb,qCCgCDQ,EAlDH,WACV,MAA0Bf,mBAAS,MAAnC,mBAAOgB,EAAP,KAAcC,EAAd,KACA,EAA0BjB,oBAAS,GAAnC,mBAAOkB,EAAP,KAAcC,EAAd,KACA,EAAwBnB,mBAAS,IAAjC,mBAAOoB,EAAP,KAAaC,EAAb,KACAC,qBAAU,WACR,IAAMC,EAAS,IAAIC,IAAO,WAAWC,IAAI,IACzCJ,EAAQE,KACP,IAYH,OACE,qCACE,0BAAShB,UAAU,YAAnB,UACE,iDACA,uBAAMmB,SAfS,SAACC,GACpBA,EAAEC,iBACF,IACE,IAAML,EAAS,IAAIC,IAAOR,GAAOS,IAAI,IACrCJ,EAAQE,GACRJ,GAAS,GACT,MAAOD,GACPC,GAAS,KAQP,UACE,uBACEU,KAAK,OACLC,SAAU,SAACH,GAAD,OAAOV,EAASU,EAAEI,OAAOC,QACnCA,MAAOhB,EACPiB,YAAY,UACZ1B,UAAS,UAAKW,EAAQ,QAAU,MAGlC,wBAAQW,KAAK,SAAStB,UAAU,MAAhC,0BAKJ,yBAASA,UAAU,SAAnB,SACGa,EAAKc,KAAI,SAAClB,EAAOjB,GAIhB,OACE,cAAC,EAAD,2BAA6BiB,GAA7B,IAAoClB,IAAKkB,EAAMlB,IAAKC,MAAOA,IAAzCA,YC5C9BoC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,cAAc,Y","file":"static/js/main.6bf0d558.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\n\r\nconst SingleColor = ({ rgb, weight, hex, index }) => {\r\n  const [alert, setAlert] = useState(false);\r\n  const bcg = rgb.join(\",\");\r\n  const white = index > 10 ? \"white\" : \"\";\r\n  const hexValue = `#${hex}`;\r\n  const handleClick = () => {\r\n    setAlert(true);\r\n    navigator.clipboard.writeText(hexValue);\r\n    setTimeout(() => {\r\n      setAlert(false);\r\n    }, 2000);\r\n  };\r\n  return (\r\n    <article\r\n      className={`color ${white}`}\r\n      style={{ backgroundColor: `rgb(${bcg})` }}\r\n      onClick={() => handleClick()}\r\n    >\r\n      <p className=\"percent-value\">{weight}%</p>\r\n      <p className=\"color-value\">{hexValue}</p>\r\n      {alert && <p className=\"alert\">copied to clipboard</p>}\r\n    </article>\r\n  );\r\n};\r\nexport default SingleColor;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"../styles/main.scss\";\r\nimport Values from \"values.js\";\r\nimport SingleColor from \"./SingleColor\";\r\nconst App = () => {\r\n  const [color, setColor] = useState(null);\r\n  const [error, setError] = useState(false);\r\n  const [list, setList] = useState([]);\r\n  useEffect(() => {\r\n    const colors = new Values(\"#f15025\").all(10);\r\n    setList(colors);\r\n  }, []);\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const colors = new Values(color).all(10);\r\n      setList(colors);\r\n      setError(false);\r\n    } catch (error) {\r\n      setError(true);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <section className=\"container\">\r\n        <h3>Color Generator</h3>\r\n        <form onSubmit={handleSubmit}>\r\n          <input\r\n            type=\"text\"\r\n            onChange={(e) => setColor(e.target.value)}\r\n            value={color}\r\n            placeholder=\"#f15025\"\r\n            className={`${error ? \"error\" : \"\"}`}\r\n          />\r\n\r\n          <button type=\"submit\" className=\"btn\">\r\n            Submit\r\n          </button>\r\n        </form>\r\n      </section>\r\n      <section className=\"colors\">\r\n        {list.map((color, index) => {\r\n          {\r\n            /* console.log(color.hex); */\r\n          }\r\n          return (\r\n            <SingleColor key={index} {...color} hex={color.hex} index={index} />\r\n          );\r\n        })}\r\n      </section>\r\n    </>\r\n  );\r\n};\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./components/App\";\r\nReactDOM.render(<App />, document.querySelector(\"#root\"));\r\n"],"sourceRoot":""}